from pathlib import Path
from labs.common.userinterface import Console
from labs.grading import Default as GuidedExercise
from ad482.common import prechecks, steps, grading


class KafkaBasics(GuidedExercise):

    __LAB__ = 'kafka-basics'

    """
    Lab: Introducing Kafka and AMQ Streams Concepts
    """

    topic = 'wind-turbine-production'

    output_file = 'report.txt'

    def start(self):
        prechecks.verify_config()
        items = [
            steps.pull_apps_repo(),
            steps.copy_lab_files(f"{self.__LAB__}/apps",
                                 self.__LAB__),
            steps.check_ocp_api(),
            steps.check_ocp_credentials(),
            steps.move_to_kafka_cluster_namespace(),
            steps.check_kafka_connection()
        ]

        Console(items).run_items(action="Starting")

    def finish(self):
        items = [
            steps.check_ocp_api(),
            steps.check_ocp_credentials(),
            steps.move_to_kafka_cluster_namespace(False),
            steps.delete_topics([self.topic])
        ]
        Console(items).run_items(action="Finishing")

    def grade(self):
        relative_app_path = Path(self.__LAB__, "energy-meter")
        items = [
            grading.verify_topics([self.topic]),
            grading.check_topic_specifications(
                self.topic,
                partitions=2,
                replicas=1,
                segment_bytes=1073741824,
                retention_ms=604800000
            ),
            grading.check_file_exists_in_folder(
                self.output_file,
                relative_app_path,
            ),
            grading.check_file_in_folder_contains(
                self.output_file,
                relative_app_path,
                2500
            )
        ]
        Console(items).run_items(action="Grading")
