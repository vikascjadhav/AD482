
from ad482.common import prechecks, steps
from labs.common.userinterface import Console
from labs.grading import Default as GuidedExercise
from pathlib import Path


class TroubleshootingOrder(GuidedExercise):

    __LAB__ = "troubleshooting-order"

    """
    Troubleshooting Order Guided Exercise
    """

    topics = [
        'potential-customers-detected'
    ]

    state_store_topics = [
        'tumblingwindows'
    ]

    def start(self):
        prechecks.verify_config()
        items = [
            steps.pull_apps_repo(),
            steps.copy_lab_files(Path(self.__LAB__, "apps",
                                      "potential-customers"), self.__LAB__),
            steps.copy_lab_files(Path(self.__LAB__, "scripts"),
                                 Path(self.__LAB__, "scripts")),
            steps.copy_env_file(Path(self.__LAB__, ".env"), ".env-streams"),
            steps.check_ocp_api(),
            steps.check_ocp_credentials(),
            steps.move_to_kafka_cluster_namespace(),
            steps.check_kafka_connection(),
            steps.create_topics(self.topics)
        ]
        Console(items).run_items(action="Starting")

    def finish(self):
        items = [
            steps.check_ocp_api(),
            steps.check_ocp_credentials(),
            steps.move_to_kafka_cluster_namespace(False),
            steps.delete_topics(self.topics),
            steps.delete_state_store_topics(self.state_store_topics),
        ]
        Console(items).run_items(action="Finishing")
