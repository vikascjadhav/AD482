from labs.grading import Default as GuidedExercise
from labs.common.userinterface import Console
from ad482.common import prechecks, steps
from .common.constants import KAFKA_CONNECT_CLUSTER_NAME, FILES_DIR


class ConnectDebezium(GuidedExercise):
    __LAB__ = "connect-debezium"

    """
    Creating Change Data Capture with Debezium Guided Exercise
    """

    def start(self):
        prechecks.verify_config()
        items = [
            steps.pull_apps_repo(),
            steps.copy_lab_files(f"{self.__LAB__}/apps", self.__LAB__),
            steps.check_ocp_api(),
            steps.check_ocp_credentials(),
            steps.move_to_kafka_cluster_namespace(),
            steps.check_kafka_connection(),
            steps.create_topics(
                ['accountant-event']
            ),
            steps.create_postgresql_from_file(
                "postgresql", "accountantsdb",
                FILES_DIR.joinpath(self.__LAB__,
                                   "postgresql-accountants.sql")
            ),
            steps.create_connect_cluster(KAFKA_CONNECT_CLUSTER_NAME,
                                         "quay.io/redhattraining/ad482-"
                                         "ch05s08-connect-cluster:latest")
        ]
        Console(items).run_items(action="Starting")

    def finish(self):
        items = [
            steps.check_ocp_api(),
            steps.check_ocp_credentials(),
            steps.move_to_kafka_cluster_namespace(False),
            steps.delete_connect_connectors(['postgresql-debezium-connector']),
            steps.delete_connect_cluster(KAFKA_CONNECT_CLUSTER_NAME),
            steps.delete_topics(
                ['my-connect-cluster-configs', 'my-connect-cluster-offsets',
                 'my-connect-cluster-status', 'accountant-event']
            ),
            steps.delete_postgresql("postgresql")
        ]
        Console(items).run_items(action="Finishing")
