from pathlib import Path
from labs.grading import Default as GuidedExercise
from labs.common.userinterface import Console
from ad482.common import labprogress
from ad482.common.labprogress import test, expect
from ad482.common.classroom import workspace


class WatchExample(GuidedExercise):

    __LAB__ = "watch-example"

    """
    Kafka consumers exercise
    """

    def start(self):
        steps = [{
            "label": "Some task"
        }]
        Console(steps).run_items(action="Starting")

        labprogress.watch(
            [test_1, test_2, test_3],
            on_finish=self.finish
        )

    def finish(self):
        steps = []
        Console(steps).run_items(action="Finishing")


# Tests to watch the exercise progress

@test("Make sure that True is True")
def test_1():
    expect(True is True)


@test("Create a folder named 'xyz'")
def test_2():
    expect(
        Path(workspace.path("test")).exists(),
        error="Folder does not exist",
        hints=["Use mkdir to create the folder"]
    )


@test("Write events to the 'example' Kafka topic")
def test_3():
    expect(
        Path(workspace.path("test2")).exists(),
        error="You are not producing events so far",
        hints=[
            "Create a producer by following the example at http://example.com/"
        ]
    )
