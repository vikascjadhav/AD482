"""
Console output functions to show lab progress
"""

from datetime import datetime
import click
from .tests import TestError


def clear():
    # TODO: find a better way to refresh screen
    click.clear()


def echo_header(labname=""):
    width, _ = click.get_terminal_size()
    now = datetime.now().strftime("%H:%M:%S")
    header = f"{labname} {now}"
    click.echo(header.center(width))


def echo_test(description: str, number: int, error: AssertionError = None):
    if error:
        echo_failing_test(description, number, error)
    else:
        echo_passing_test(description, number)

    click.echo("")


def echo_passing_test(description: str, number: int):
    checkmark = click.style("✓", fg="green")
    description = click.style(
        f"{number}. {description}", bold=True, fg="bright_white")
    click.echo(checkmark + " " + description)


def echo_failing_test(test_description: str, number: int, error: TestError):
    errormark = click.style("✖", fg="red")
    hintmark = click.style("Hint", fg="cyan")
    description = click.style(
        f"{number}. {test_description}", bold=True, fg="bright_white")
    click.echo(errormark + " " + description, err=True)
    click.secho(f"  {error.message}", fg="red", err=True)
    for hint in error.hints:
        click.secho(f"  {hintmark}: {hint}", err=True)
    click.echo("")


def echo_footer(passing: int, failing: int):
    click.secho(f"{passing} passing", fg="green")
    click.secho(f"{failing} failing", fg="red")


def echo_lab_success():
    click.echo("")
    click.secho("You have successfully completed the exercise.",
                fg="green", bold=True)


def confirm_finish():
    command = click.style("lab finish", fg="bright_white", bold=True)
    warning = click.style("this will clean up resources", fg="yellow")
    click.echo(
        f"Would you like to run '{command}' before exiting? "
        f"({warning}) [y|n] ",
        nl=False)
    c = click.getchar().lower()
    click.echo()

    if c == "y":
        return True
    elif c == "n":
        return False
    else:
        return confirm_finish()
